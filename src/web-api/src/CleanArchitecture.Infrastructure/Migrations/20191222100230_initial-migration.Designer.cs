// <auto-generated />
using System;
using CleanArchitecture.Infrastructure.Data.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CleanArchitecture.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191222100230_initial-migration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CleanArchitecture.Core.Entities.Lesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AcceptedByTutor")
                        .HasColumnType("bit");

                    b.Property<bool>("CanceledByTutor")
                        .HasColumnType("bit");

                    b.Property<bool>("CancelledByStudent")
                        .HasColumnType("bit");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Term")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("TopicCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TutorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TopicCategoryId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("CleanArchitecture.Core.Entities.LessonTopicCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LessonTopicCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fb681c44-a917-456f-8a57-60bda5e33f47"),
                            CategoryName = "Maths"
                        },
                        new
                        {
                            Id = new Guid("387ce87f-bc98-478b-b6f5-1152423e560e"),
                            CategoryName = "Physics"
                        },
                        new
                        {
                            Id = new Guid("62073d1a-5f7a-454f-9b87-e1af62808cf4"),
                            CategoryName = "Programming"
                        },
                        new
                        {
                            Id = new Guid("945fe619-120c-4c05-bd04-a91fe93c769f"),
                            CategoryName = "Biology"
                        },
                        new
                        {
                            Id = new Guid("f3d4fbe4-a7be-4983-baf7-9a5f10ac141d"),
                            CategoryName = "History"
                        },
                        new
                        {
                            Id = new Guid("4974ef92-03cb-4eff-8e28-16d5450d25d6"),
                            CategoryName = "Mechanics"
                        });
                });

            modelBuilder.Entity("CleanArchitecture.Core.Entities.Lesson", b =>
                {
                    b.HasOne("CleanArchitecture.Core.Entities.LessonTopicCategory", "TopicCategory")
                        .WithMany()
                        .HasForeignKey("TopicCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
